{"remainingRequest":"D:\\shixun\\yizhi\\yizhi\\node_modules\\thread-loader\\dist\\cjs.js!D:\\shixun\\yizhi\\yizhi\\node_modules\\babel-loader\\lib\\index.js!D:\\shixun\\yizhi\\yizhi\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\shixun\\yizhi\\yizhi\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\shixun\\yizhi\\yizhi\\src\\components\\Newwave.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\shixun\\yizhi\\yizhi\\src\\components\\Newwave.vue","mtime":1630307001837},{"path":"D:\\shixun\\yizhi\\yizhi\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\shixun\\yizhi\\yizhi\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\shixun\\yizhi\\yizhi\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\shixun\\yizhi\\yizhi\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\shixun\\yizhi\\yizhi\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Newwave.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"com-container\">\r\n    <div class=\"com-chart\" ref=\"newwava_ref\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      echarts: \"\",\r\n      myChart: \"\",\r\n      allData: [], // 服务器返回的数据\r\n      xtime: [\r\n        \"2021-7-1\",\r\n        \"2021-7-2\",\r\n        \"2021-7-3\",\r\n        \"2021-7-4\",\r\n        \"2021-7-5\",\r\n        \"2021-7-5\",\r\n        \"2021-7-6\",\r\n        \"2021-7-7\",\r\n        \"2021-7-8\",\r\n        \"2021-7-9\",\r\n        \"2021-7-10\",\r\n        \"2021-7-11\",\r\n        \"2021-7-12\",\r\n        \"2021-7-13\",\r\n        \"2021-7-14\",\r\n        \"2021-7-15\",\r\n        \"2021-7-16\",\r\n        \"2021-7-17\",\r\n        \"2021-7-18\",\r\n        \"2021-7-19\",\r\n        \"2021-7-20\",\r\n        \"2021-7-21\",\r\n        \"2021-7-22\",\r\n        \"2021-7-23\",\r\n        \"2021-7-24\",\r\n        \"2021-7-25\",\r\n        \"2021-7-26\",\r\n        \"2021-7-27\",\r\n        \"2021-7-28\",\r\n        \"2021-7-29\",\r\n        \"2021-7-30\",\r\n        \"2021-7-31\",\r\n        \"2021-8-1\",\r\n        \"2021-8-2\",\r\n        \"2021-8-3\",\r\n        \"2021-8-4\",\r\n        \"2021-8-5\",\r\n        \"2021-8-6\",\r\n        \"2021-8-7\",\r\n        \"2021-8-8\",\r\n        \"2021-8-9\",\r\n        \"2021-8-10\",\r\n        \"2021-8-11\",\r\n        \"2021-8-12\",\r\n        \"2021-8-13\",\r\n        \"2021-8-14\",\r\n        \"2021-8-15\",\r\n        \"2021-8-16\",\r\n        \"2021-8-17\",\r\n        \"2021-8-18\",\r\n        \"2021-8-19\",\r\n        \"2021-8-20\",\r\n        \"2021-8-21\",\r\n      ],\r\n      Confirm: [\r\n        1423, 2714, 3554, 4586, 5806, 7153, 9043, 11177, 13522, 16678, 19665,\r\n        22112, 26552, 29666, 33227, 38221, 52611, 53596, 63264, 63666, 64222,\r\n        65222, 65355, 65366, 65897, 65999, 66152, 66523, 66555, 66666,\r\n      ],\r\n      Suspect: [\r\n        1215, 151, 1212, 541, 212, 512, 51, 102, 452, 841, 861, 21, 6412, 641,\r\n        120, 150, 122, 211, 620, 210, 12, 144, 134, 121, 2, 620, 12, 33,\r\n      ],\r\n      Cure: [\r\n        14, 27, 35, 45, 58, 71, 90, 111, 135, 166, 196, 2211, 2655, 2966, 3322,\r\n        5000, 6822, 7524, 8065, 10582, 15054, 26854, 36575, 48247, 58382, 62872,\r\n        63999, 64824, 66111, 66222,\r\n      ],\r\n      Dead: [\r\n        76, 88, 99, 100, 124, 134, 144, 154, 168, 170, 180, 200, 250, 300, 356,\r\n        450, 590, 750, 900, 1240, 1600, 1750, 1870, 1899, 1910, 1950, 2051,\r\n        2169, 2210, 2340, 2610, 2920, 3152,\r\n      ],\r\n    };\r\n  },\r\n  mounted() {\r\n    this.innitChart();\r\n    window.addEventListener(\"resize\", this.screenAdapter);\r\n    this.screenAdapter();\r\n  },\r\n  destroyed() {\r\n    window.removeEventListener(\"resize\", this.screenAdapter);\r\n  },\r\n  methods: {\r\n    //初始化图表信息\r\n    innitChart() {\r\n      this.echarts = require(\"echarts\");\r\n      this.myChart = this.echarts.init(this.$refs.newwava_ref);\r\n      var initoption = {\r\n        backgroundColor: \"#fff\",\r\n        title: {\r\n          text: \"全国新增病例趋势图\",\r\n          left: \"center\",\r\n          textStyle: {\r\n            fontSize: 50,\r\n          },\r\n          top: \"2%\",\r\n          bottom: \"2%\",\r\n        },\r\n        tooltip: {\r\n          trigger: \"axis\",\r\n          axisPointer: {\r\n            type: \"cross\",\r\n            textStyle: {\r\n              color: \"#fff\",\r\n            },\r\n          },\r\n        },\r\n        grid: {\r\n          borderWidth: 0,\r\n          top: \"12%\",\r\n          left: \"3%\",\r\n          right: \"3%\",\r\n          bottom: \"8%\",\r\n          textStyle: {\r\n            color: \"#fff\",\r\n          },\r\n          containLabel: true,\r\n        },\r\n        legend: {\r\n          x: \"10%\",\r\n          top: \"8%\",\r\n          textStyle: {\r\n            color: \"rgb(32, 38, 47)\",\r\n          },\r\n          data: [\"新增确诊\", \"新增疑似\", \"新增治愈\", \"新增死亡\"],\r\n        },\r\n        calculable: true,\r\n        xAxis: [\r\n          {\r\n            type: \"category\",\r\n            axisLine: {\r\n              lineStyle: {\r\n                color: \"rgba(32, 38, 47,0.8)\",\r\n              },\r\n            },\r\n            splitLine: {\r\n              show: false,\r\n            },\r\n            axisTick: {\r\n              show: false,\r\n            },\r\n          },\r\n        ],\r\n        yAxis: [\r\n          {\r\n            type: \"value\",\r\n            splitLine: {\r\n              show: true,\r\n            },\r\n            axisLine: {\r\n              lineStyle: {\r\n                color: \"rgba(32, 38, 47,0.8)\",\r\n              },\r\n            },\r\n          },\r\n        ],\r\n        dataZoom: [\r\n          {\r\n            show: true,\r\n            height: \"3%\",\r\n            // xAxisIndex: [0],\r\n            bottom: \"3%\",\r\n            start: 40,\r\n            end: 100,\r\n            handleIcon:\r\n              \"path://M306.1,413c0,2.2-1.8,4-4,4h-59.8c-2.2,0-4-1.8-4-4V200.8c0-2.2,1.8-4,4-4h59.8c2.2,0,4,1.8,4,4V413z\",\r\n            handleSize: \"120%\",\r\n            handleStyle: {\r\n              color: \"#5B3AAE\",\r\n            },\r\n            textStyle: {\r\n              color: \"rgba(204,187,225,0.5)\",\r\n            },\r\n            fillerColor: \"rgba(67,55,160,0.4)\",\r\n            borderColor: \"rgba(204,187,225,0.5)\",\r\n          },\r\n          {\r\n            type: \"inside\",\r\n            show: true,\r\n            height: 15,\r\n            start: 1,\r\n            end: 35,\r\n          },\r\n        ],\r\n        series: [\r\n          {\r\n            name: \"新增确诊\",\r\n            type: \"line\",\r\n            symbolSize: 10,\r\n            symbol: \"circle\",\r\n            itemStyle: {\r\n              color: \"rgb(255, 0, 0)\",\r\n            },\r\n          },\r\n          {\r\n            name: \"新增疑似\",\r\n            type: \"line\",\r\n            symbolSize: 10,\r\n            symbol: \"circle\",\r\n            itemStyle: {\r\n              color: \"rgb(255, 181, 0)\",\r\n            },\r\n            markPoint: {\r\n              label: {\r\n                color: \"#fff\",\r\n              },\r\n              symbolSize: 50,\r\n              data: [\r\n                {\r\n                  type: \"max\",\r\n                  name: \"最大值\",\r\n                },\r\n                {\r\n                  type: \"min\",\r\n                  name: \"最小值\",\r\n                },\r\n              ],\r\n            },\r\n          },\r\n          {\r\n            name: \"新增治愈\",\r\n            type: \"line\",\r\n            symbolSize: 10,\r\n            symbol: \"circle\",\r\n            itemStyle: {\r\n              color: \"rgb(78, 243, 9)\",\r\n            },\r\n            markPoint: {\r\n              label: {\r\n                color: \"#fff\",\r\n              },\r\n              symbolSize: 60,\r\n              data: [\r\n                {\r\n                  type: \"max\",\r\n                  name: \"最大值\",\r\n                },\r\n              ],\r\n            },\r\n          },\r\n          {\r\n            name: \"新增死亡\",\r\n            type: \"line\",\r\n            symbolSize: 10,\r\n            symbol: \"circle\",\r\n            itemStyle: {\r\n              color: \"rgb(153, 153, 153)\",\r\n            },\r\n          },\r\n        ],\r\n      };\r\n      this.myChart.setOption(initoption);\r\n      this.getData();\r\n    },\r\n    async getData() {\r\n      const { data: allData } = await this.$axios.get(\"/china\");\r\n      this.allData = allData;\r\n      this.updataChart();\r\n    },\r\n    //通过axios获取数据\r\n    updataChart() {\r\n      const xtime = this.allData.map((item) => {\r\n        return item.LastUpdateTime.slice(0, 10);\r\n      });\r\n      this.xtime = xtime.reverse();\r\n      const Confirm = this.allData.map((item) => {\r\n        return item.addConfirm;\r\n      });\r\n      this.Confirm = Confirm.reverse();\r\n      const Suspect = this.allData.map((item) => {\r\n        return item.addSuspect;\r\n      });\r\n      this.Suspect = Suspect.reverse();\r\n      const Cure = this.allData.map((item) => {\r\n        return item.addHeal;\r\n      });\r\n      this.Cure = Cure.reverse();\r\n      const Dead = this.allData.map((item) => {\r\n        return item.addDead;\r\n      });\r\n      this.Dead = Dead.reverse();\r\n      var dataOption = {\r\n        xAxis: [\r\n          {\r\n            data: this.xtime,\r\n          },\r\n        ],\r\n        series: [\r\n          {\r\n            data: this.Confirm,\r\n          },\r\n          {\r\n            data: this.Suspect,\r\n          },\r\n          {\r\n            data: this.Cure,\r\n          },\r\n          {\r\n            data: this.Dead,\r\n          },\r\n        ],\r\n      };\r\n      this.myChart.setOption(dataOption);\r\n    },\r\n    screenAdapter() {\r\n      const SIZE = (this.$refs.newwava_ref.offsetWidth / 100) * 1.8;\r\n      const adapterOption = {\r\n        title: {\r\n          textStyle: {\r\n            fontSize: SIZE,\r\n          },\r\n        },\r\n      };\r\n      this.myChart.setOption(adapterOption);\r\n      this.myChart.resize();\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"sourceRoot":"src/components"}]}