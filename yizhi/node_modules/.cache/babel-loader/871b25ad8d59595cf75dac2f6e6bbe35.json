{"remainingRequest":"D:\\shixun\\yizhi\\yizhi\\node_modules\\thread-loader\\dist\\cjs.js!D:\\shixun\\yizhi\\yizhi\\node_modules\\babel-loader\\lib\\index.js!D:\\shixun\\yizhi\\yizhi\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\shixun\\yizhi\\yizhi\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\shixun\\yizhi\\yizhi\\src\\components\\ProvinceMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\shixun\\yizhi\\yizhi\\src\\components\\ProvinceMap.vue","mtime":1630459890498},{"path":"D:\\shixun\\yizhi\\yizhi\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\shixun\\yizhi\\yizhi\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\shixun\\yizhi\\yizhi\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\shixun\\yizhi\\yizhi\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\shixun\\yizhi\\yizhi\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkQ6L3NoaXh1bi95aXpoaS95aXpoaS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAicHJvdmluY2VtYXAiLAogIHByb3BzOiBbInByb3ZpbmNlTmFtZSIsICJwcm92aW5jZVBhdGgiLCAicHJvdmluY2VUaXRsZSJdLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBtYXA6ICIiLAogICAgICBteUNoYXJ0OiAiIiwKICAgICAgZWNoYXJ0czogIiIsCiAgICAgIG1hcERhdGE6ICIiCiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuaW5pdEVjaGFydE1hcCgpOwogICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoInJlc2l6ZSIsIHRoaXMuc2NyZWVuQWRhcHRlcik7CiAgfSwKICBiZWZvcmVVcGRhdGU6IGZ1bmN0aW9uIGJlZm9yZVVwZGF0ZSgpIHsKICAgIHRoaXMuc2NyZWVuQWRhcHRlcigpOwogIH0sCiAgZGVzdHJveWVkOiBmdW5jdGlvbiBkZXN0cm95ZWQoKSB7CiAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigicmVzaXplIiwgdGhpcy5zY3JlZW5BZGFwdGVyKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIC8v6I635Y+W5Zyw5Zu+55+i6YePCiAgICBnZXRNYXA6IGZ1bmN0aW9uIGdldE1hcCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIFBNYXA7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KCJodHRwOi8vbG9jYWxob3N0OjgwODEiICsgX3RoaXMucHJvdmluY2VQYXRoKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgUE1hcCA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBfdGhpcy5tYXAgPSBQTWFwLmRhdGE7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBpbml0RWNoYXJ0TWFwOiBmdW5jdGlvbiBpbml0RWNoYXJ0TWFwKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHZhciBoLCBhbGxEYXRhLCBvcHRpb25zOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBoID0gX3RoaXMyLiRjcmVhdGVFbGVtZW50OwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMi5nZXRNYXAoKTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA1OwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMi4kYXhpb3MuZ2V0KCIvcCIpOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICBhbGxEYXRhID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgICBhbGxEYXRhID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShhbGxEYXRhLmRhdGEpKTsKICAgICAgICAgICAgICAgIF90aGlzMi5lY2hhcnRzID0gcmVxdWlyZSgiZWNoYXJ0cyIpOwogICAgICAgICAgICAgICAgX3RoaXMyLm15Q2hhcnQgPSBfdGhpczIuZWNoYXJ0cy5pbml0KF90aGlzMi4kcmVmcy5wcm9tYXBfcmVmLCAiY2hhbGsiKTsgLy/ojrflj5bnnIHku73lnLDlm77nn6Lph4/mlbDmja4KCiAgICAgICAgICAgICAgICBfdGhpczIuZWNoYXJ0cy5yZWdpc3Rlck1hcChfdGhpczIucHJvdmluY2VOYW1lLCBfdGhpczIubWFwKTsKCiAgICAgICAgICAgICAgICBhbGxEYXRhLm1hcChmdW5jdGlvbiAoaSkgewogICAgICAgICAgICAgICAgICBpLm5hbWUgPSBpLnVhTmFtZTsKICAgICAgICAgICAgICAgICAgaS52YWx1ZSA9IGkudG90YWxDb25maXJtOwogICAgICAgICAgICAgICAgICByZXR1cm4gaTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgb3B0aW9ucyA9IHsKICAgICAgICAgICAgICAgICAgdGl0bGU6IHsKICAgICAgICAgICAgICAgICAgICB0ZXh0OiAiIi5jb25jYXQoX3RoaXMyLnByb3ZpbmNlVGl0bGUsICJcdTczQjBcdTVCNThcdTc4NkVcdThCQ0FcdTUyMDZcdTVFMDNcdTU2RkUiKSwKICAgICAgICAgICAgICAgICAgICBsZWZ0OiAiY2VudGVyIiwKICAgICAgICAgICAgICAgICAgICB0b3A6IDIwCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIHRvb2x0aXA6IHsKICAgICAgICAgICAgICAgICAgICBmb3JtYXR0ZXI6IGZ1bmN0aW9uIGZvcm1hdHRlcihwYXJhbXMpIHsKICAgICAgICAgICAgICAgICAgICAgIGlmIChwYXJhbXMuZGF0YSkgewogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcGFyYW1zLm5hbWUgKyAiPGJyPiIgKyAi57Sv6K6h56Gu6K+KOiIgKyBwYXJhbXMuZGF0YS50b3RhbENvbmZpcm0gKyAiPGJyPiIgKyAi546w5a2Y56Gu6K+KOiIgKyBwYXJhbXMuZGF0YS50b3RhbE5vd0NvbmZpcm0gKyAiPGJyPiIgKyAi57Sv6K6h5rK75oSIOiIgKyBwYXJhbXMuZGF0YS50b3RhbEhlYWwgKyAiPGJyPiIgKyAi57Sv6K6h5q275LqhOiIgKyBwYXJhbXMuZGF0YS50b3RhbERlYWQgKyAiPGJyPiIgKyAi5LuK5pel5paw5aKeOiIgKyBwYXJhbXMuZGF0YS50b2RheUNvbmZpcm07CiAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gaCgicCIsIFsiXHU2NjgyXHU2NUUwXHU4QkU1XHU1N0NFXHU1RTAyXHU2NTcwXHU2MzZFIl0pOwogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgdG9vbGJveDogewogICAgICAgICAgICAgICAgICAgIHNob3c6IHRydWUsCiAgICAgICAgICAgICAgICAgICAgZmVhdHVyZTogewogICAgICAgICAgICAgICAgICAgICAgc2F2ZUFzSW1hZ2U6IHsKICAgICAgICAgICAgICAgICAgICAgICAgcGl4ZWxSYXRpbzogNAogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgdmlzdWFsTWFwOiB7CiAgICAgICAgICAgICAgICAgICAgaXRlbUhpZ2h0OiAxMCwKICAgICAgICAgICAgICAgICAgICBpdGVtV2lkdGg6IDE1LAogICAgICAgICAgICAgICAgICAgIHRleHRHYXA6IDEwLAogICAgICAgICAgICAgICAgICAgIHNob3c6IHRydWUsCiAgICAgICAgICAgICAgICAgICAgbGVmdDogIjc1JSIsCiAgICAgICAgICAgICAgICAgICAgYm90dG9tOiAiNSUiLAogICAgICAgICAgICAgICAgICAgIHNob3dMYWJlbDogdHJ1ZSwKICAgICAgICAgICAgICAgICAgICBwaWVjZXM6IFt7CiAgICAgICAgICAgICAgICAgICAgICBndGU6IDEwMDAsCiAgICAgICAgICAgICAgICAgICAgICBsYWJlbDogIj49IDEwMDAiLAogICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICIjM2M1N2NlIgogICAgICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgICAgIGd0ZTogNTAwLAogICAgICAgICAgICAgICAgICAgICAgbHQ6IDk5OSwKICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiAiNTAwIC0gOTk5IiwKICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAiIzZmODNkYiIKICAgICAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgICAgICBndGU6IDEwMCwKICAgICAgICAgICAgICAgICAgICAgIGx0OiA0OTksCiAgICAgICAgICAgICAgICAgICAgICBsYWJlbDogIjEwMCAtIDQ5OSIsCiAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogIiM5ZmFjZTciCiAgICAgICAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgICAgICAgZ3RlOiAxMCwKICAgICAgICAgICAgICAgICAgICAgIGx0OiA5OSwKICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiAiMTAgLSA5OSIsCiAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogIiNiOGM0ZjUiCiAgICAgICAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgICAgICAgbHQ6IDEwLAogICAgICAgICAgICAgICAgICAgICAgbGFiZWw6ICI8MTAiLAogICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICIjZDJkOGYwIgogICAgICAgICAgICAgICAgICAgIH1dCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIHNlcmllczogW3sKICAgICAgICAgICAgICAgICAgICB0eXBlOiAibWFwIiwKICAgICAgICAgICAgICAgICAgICBtYXA6IF90aGlzMi5wcm92aW5jZU5hbWUsCiAgICAgICAgICAgICAgICAgICAgbGFiZWw6IHsKICAgICAgICAgICAgICAgICAgICAgIHNob3c6IHRydWUsCiAgICAgICAgICAgICAgICAgICAgICBmb250U2l6ZTogIjE0IiwKICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAicmdiYSgwLDAsMCwwLjcpIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgZW1waGFzaXM6IHsKICAgICAgICAgICAgICAgICAgICAgIGJvcmRlckNvbG9yOiAicmdiYSgwLCAwLCAwLCAwLjIpIiwKICAgICAgICAgICAgICAgICAgICAgIGl0ZW1TdHlsZTogewogICAgICAgICAgICAgICAgICAgICAgICBhcmVhQ29sb3I6ICIjZjJkNWFkIiwKICAgICAgICAgICAgICAgICAgICAgICAgc2hhZG93T2Zmc2V0WDogMCwKICAgICAgICAgICAgICAgICAgICAgICAgc2hhZG93T2Zmc2V0WTogMCwKICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyV2lkdGg6IDAKICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIGRhdGE6IGFsbERhdGEKICAgICAgICAgICAgICAgICAgfV0KICAgICAgICAgICAgICAgIH07CgogICAgICAgICAgICAgICAgX3RoaXMyLm15Q2hhcnQuc2V0T3B0aW9uKG9wdGlvbnMpOwoKICAgICAgICAgICAgICBjYXNlIDEzOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgLy/pgILphY3liIbovqjnjocKICAgIHNjcmVlbkFkYXB0ZXI6IGZ1bmN0aW9uIHNjcmVlbkFkYXB0ZXIoKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgICAgdmFyIHRpdGxlRm9udFNpemUsIGFkYXB0ZXJPcHRpb247CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIHRpdGxlRm9udFNpemUgPSBfdGhpczMuJHJlZnMucHJvbWFwX3JlZi5vZmZzZXRXaWR0aCAvIDEwMCAqIDMuNDsKICAgICAgICAgICAgICAgIGFkYXB0ZXJPcHRpb24gPSB7CiAgICAgICAgICAgICAgICAgIHRpdGxlOiB7CiAgICAgICAgICAgICAgICAgICAgdGV4dFN0eWxlOiB7CiAgICAgICAgICAgICAgICAgICAgICBmb250U2l6ZTogdGl0bGVGb250U2l6ZQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfTsKCiAgICAgICAgICAgICAgICBfdGhpczMubXlDaGFydC5zZXRPcHRpb24oYWRhcHRlck9wdGlvbik7CgogICAgICAgICAgICAgICAgX3RoaXMzLm15Q2hhcnQucmVzaXplKCk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMyk7CiAgICAgIH0pKSgpOwogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIHByb3ZpbmNlTmFtZTogZnVuY3Rpb24gcHJvdmluY2VOYW1lKCkgewogICAgICB0aGlzLmluaXRFY2hhcnRNYXAoKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["ProvinceMap.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"com-container\">\r\n    <div class=\"com-chart\" id=\"map_ref\" ref=\"promap_ref\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nexport default {\r\n  name: \"provincemap\",\r\n  props: [\"provinceName\", \"provincePath\", \"provinceTitle\"],\r\n  data() {\r\n    return {\r\n      map: \"\",\r\n      myChart: \"\",\r\n      echarts: \"\",\r\n      mapData: \"\",\r\n    };\r\n  },\r\n  mounted() {\r\n    this.initEchartMap();\r\n    window.addEventListener(\"resize\", this.screenAdapter);\r\n  },\r\n\r\n  beforeUpdate() {\r\n    this.screenAdapter();\r\n  },\r\n  destroyed() {\r\n    window.removeEventListener(\"resize\", this.screenAdapter);\r\n  },\r\n  methods: {\r\n    //获取地图矢量\r\n    async getMap() {\r\n      var PMap = await axios.get(\"http://localhost:8081\" + this.provincePath);\r\n      this.map = PMap.data;\r\n    },\r\n    async initEchartMap() {\r\n      await this.getMap();\r\n      let allData = await this.$axios.get(\"/p\");\r\n      allData = JSON.parse(JSON.stringify(allData.data));\r\n      this.echarts = require(\"echarts\");\r\n      this.myChart = this.echarts.init(this.$refs.promap_ref, \"chalk\");\r\n      //获取省份地图矢量数据\r\n      this.echarts.registerMap(this.provinceName, this.map);\r\n      allData.map(function (i) {\r\n        i.name = i.uaName;\r\n        i.value = i.totalConfirm;\r\n        return i;\r\n      });\r\n      let options = {\r\n        title: {\r\n          text: `${this.provinceTitle}现存确诊分布图`,\r\n          left: \"center\",\r\n          top: 20,\r\n        },\r\n        tooltip: {\r\n          formatter: function (params) {\r\n            if (params.data) {\r\n              return (\r\n                params.name +\r\n                \"<br>\" +\r\n                \"累计确诊:\" +\r\n                params.data.totalConfirm +\r\n                \"<br>\" +\r\n                \"现存确诊:\" +\r\n                params.data.totalNowConfirm +\r\n                \"<br>\" +\r\n                \"累计治愈:\" +\r\n                params.data.totalHeal +\r\n                \"<br>\" +\r\n                \"累计死亡:\" +\r\n                params.data.totalDead +\r\n                \"<br>\" +\r\n                \"今日新增:\" +\r\n                params.data.todayConfirm\r\n              );\r\n            } else {\r\n              return <p>暂无该城市数据</p>;\r\n            }\r\n          },\r\n        },\r\n        toolbox: {\r\n          show: true,\r\n          feature: {\r\n            saveAsImage: {\r\n              pixelRatio: 4,\r\n            },\r\n          },\r\n        },\r\n        visualMap: {\r\n          itemHight: 10,\r\n          itemWidth: 15,\r\n          textGap: 10,\r\n          show: true,\r\n          left: \"75%\",\r\n          bottom: \"5%\",\r\n          showLabel: true,\r\n          pieces: [\r\n            {\r\n              gte: 1000,\r\n              label: \">= 1000\",\r\n              color: \"#3c57ce\",\r\n            },\r\n            {\r\n              gte: 500,\r\n              lt: 999,\r\n              label: \"500 - 999\",\r\n              color: \"#6f83db\",\r\n            },\r\n            {\r\n              gte: 100,\r\n              lt: 499,\r\n              label: \"100 - 499\",\r\n              color: \"#9face7\",\r\n            },\r\n            {\r\n              gte: 10,\r\n              lt: 99,\r\n              label: \"10 - 99\",\r\n              color: \"#b8c4f5\",\r\n            },\r\n            {\r\n              lt: 10,\r\n              label: \"<10\",\r\n              color: \"#d2d8f0\",\r\n            },\r\n          ],\r\n        },\r\n        series: [\r\n          {\r\n            type: \"map\",\r\n            map: this.provinceName,\r\n            label: {\r\n              show: true,\r\n              fontSize: \"14\",\r\n              color: \"rgba(0,0,0,0.7)\",\r\n            },\r\n            emphasis: {\r\n              borderColor: \"rgba(0, 0, 0, 0.2)\",\r\n              itemStyle: {\r\n                areaColor: \"#f2d5ad\",\r\n                shadowOffsetX: 0,\r\n                shadowOffsetY: 0,\r\n                borderWidth: 0,\r\n              },\r\n            },\r\n            data: allData,\r\n          },\r\n        ],\r\n      };\r\n\r\n      this.myChart.setOption(options);\r\n    },\r\n    //适配分辨率\r\n    async screenAdapter() {\r\n      const titleFontSize = (this.$refs.promap_ref.offsetWidth / 100) * 3.4;\r\n      let adapterOption = {\r\n        title: {\r\n          textStyle: {\r\n            fontSize: titleFontSize,\r\n          },\r\n        },\r\n      };\r\n      this.myChart.setOption(adapterOption);\r\n      this.myChart.resize();\r\n    },\r\n  },\r\n  watch: {\r\n    provinceName() {\r\n      this.initEchartMap();\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n</style>"],"sourceRoot":"src/components"}]}