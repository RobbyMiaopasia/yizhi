{"remainingRequest":"D:\\疫知\\yizhi\\yizhi\\node_modules\\babel-loader\\lib\\index.js!D:\\疫知\\yizhi\\yizhi\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\疫知\\yizhi\\yizhi\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\疫知\\yizhi\\yizhi\\src\\components\\Pie.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\疫知\\yizhi\\yizhi\\src\\components\\Pie.vue","mtime":1630307031894},{"path":"D:\\疫知\\yizhi\\yizhi\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\疫知\\yizhi\\yizhi\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\疫知\\yizhi\\yizhi\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\疫知\\yizhi\\yizhi\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Pie.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"com-container\">\r\n    <div class=\"com-chart\" id=\"bar_ref\" ref=\"bar_ref\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      // { value: 2000, name: \"累计确诊\", increase: \"15\" },\r\n      // { value: 300, name: \"现存确诊\", increase: \"15\" },\r\n      // { value: 1500, name: \"累计治愈\", increase: \"15\" },\r\n      // { value: 200, name: \"累计死亡\", increase: \"15\" },\r\n      allData: [],\r\n      allValue: [],\r\n      allName: [\"累计确诊\", \"现存确诊\", \"累计治愈\", \"累计死亡\"],\r\n      allIncrease: [],\r\n    };\r\n  },\r\n  mounted() {\r\n    this.inithelinfo();\r\n    this.getData();\r\n    window.addEventListener(\"resize\", this.screenAdapter);\r\n    this.screenAdapter();\r\n  },\r\n  destroyed() {\r\n    window.removeEventListener(\"resize\", this.screenAdapter);\r\n  },\r\n  methods: {\r\n    inithelinfo() {\r\n      //初始化echart对象\r\n      this.echarts = require(\"echarts\");\r\n      this.chartInstance = this.echarts.init(this.$refs.bar_ref, \"chalk\");\r\n      let option = {};\r\n      this.chartInstance.setOption(option);\r\n    },\r\n    async getData() {\r\n      const { data: allData } = await this.$axios.get(\"/china\");\r\n      this.allData = allData[0];\r\n      this.allValue = [\r\n        +this.allData.totalConfirm,\r\n        +this.allData.totalNowConfirm,\r\n        +this.allData.totalHeal,\r\n        +this.allData.totalDead,\r\n      ];\r\n      this.allIncrease = [\r\n        +this.allData.addConfirm,\r\n        +this.allData.addNowConfirm,\r\n        +this.allData.addHeal,\r\n        +this.allData.addDead,\r\n      ];\r\n      this.screenAdapter();\r\n    },\r\n    //适配分辨率\r\n    screenAdapter() {\r\n      // this.getData();\r\n      const titleFontSize = (this.$refs.bar_ref.offsetWidth / 100) * 3.5;\r\n      const dataFontSize = (this.$refs.bar_ref.offsetWidth / 100) * 2.4;\r\n      const adapterOption = {\r\n        title: {\r\n          text: \"全国疫情人数汇总\",\r\n          left: \"center\",\r\n          top: 20,\r\n          textStyle: {\r\n            fontSize: titleFontSize,\r\n          },\r\n        },\r\n        tooltip: {},\r\n        hoverAnimation: false,\r\n        dataset: {\r\n          source: [[\"product\", \"累计确诊\", \"现存确诊\", \"累计治愈\", \"累计死亡\"]],\r\n        },\r\n        series: [\r\n          {\r\n            type: \"pie\",\r\n            radius: [\"25%\", \"35%\"],\r\n            center: [\"30%\", \"30%\"],\r\n            color: {\r\n              type: \"linear\", // 线性渐变\r\n              x: 0,\r\n              y: 0,\r\n              x2: 0,\r\n              y2: 1,\r\n              colorStops: [\r\n                {\r\n                  offset: 0,\r\n                  color: \"rgb(245, 126, 132)\",\r\n                },\r\n                {\r\n                  offset: 1,\r\n                  color: \"rgb(214, 60, 68)\",\r\n                },\r\n              ],\r\n            },\r\n            label: {\r\n              show: true,\r\n              position: \"center\",\r\n              color: \"rgb(214, 60, 68)\",\r\n              formatter: \"{a|{c}}\\n\\n{b|{b}}\\n\\n昨日\" + this.allIncrease[0],\r\n              fontWeight: \"bold\",\r\n              fontSize: dataFontSize,\r\n              rich: {\r\n                a: {\r\n                  fontSize: dataFontSize * 1.2,\r\n                  fontWeight: \"bold\",\r\n                },\r\n                b: {\r\n                  fontSize: dataFontSize * 1.4,\r\n                  fontWeight: \"bold\",\r\n                },\r\n              },\r\n            },\r\n            data: [\r\n              {\r\n                value: this.allValue[0],\r\n                name: this.allName[0],\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            type: \"pie\",\r\n            radius: [\"25%\", \"35%\"],\r\n            center: [\"70%\", \"30%\"],\r\n            encode: {\r\n              itemName: \"product\",\r\n              value: \"现存确诊\",\r\n            },\r\n            color: {\r\n              type: \"linear\", // 线性渐变\r\n              x: 0,\r\n              y: 0,\r\n              x2: 0,\r\n              y2: 1,\r\n              colorStops: [\r\n                {\r\n                  offset: 0,\r\n                  color: \"rgb(99, 213, 241)\",\r\n                },\r\n                {\r\n                  offset: 1,\r\n                  color: \"rgb(125, 140, 224)\",\r\n                },\r\n              ],\r\n            },\r\n            label: {\r\n              show: true,\r\n              position: \"center\",\r\n              color: \"rgb(125, 140, 224)\",\r\n              formatter: \"{a|{c}}\\n\\n{b|{b}}\\n\\n昨日\" + this.allIncrease[1],\r\n              fontWeight: \"bold\",\r\n              fontSize: dataFontSize,\r\n              rich: {\r\n                a: {\r\n                  fontSize: dataFontSize * 1.2,\r\n                  fontWeight: \"bold\",\r\n                },\r\n                b: {\r\n                  fontSize: dataFontSize * 1.4,\r\n                  fontWeight: \"bold\",\r\n                },\r\n              },\r\n            },\r\n            data: [\r\n              {\r\n                value: this.allValue[1],\r\n                name: this.allName[1],\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            type: \"pie\",\r\n            radius: [\"25%\", \"35%\"],\r\n            center: [\"30%\", \"75%\"],\r\n            encode: {\r\n              itemName: \"product\",\r\n              value: \"累计治愈\",\r\n            },\r\n            color: {\r\n              type: \"linear\", // 线性渐变\r\n              x: 0,\r\n              y: 0,\r\n              x2: 0,\r\n              y2: 1,\r\n              colorStops: [\r\n                {\r\n                  offset: 0,\r\n                  color: \"rgb(140, 235, 206)\",\r\n                },\r\n                {\r\n                  offset: 1,\r\n                  color: \"rgb(47, 202, 33)\",\r\n                },\r\n              ],\r\n            },\r\n            label: {\r\n              show: true,\r\n              position: \"center\",\r\n              color: \"rgb(47, 202, 33)\",\r\n              formatter: \"{a|{c}}\\n\\n{b|{b}}\\n\\n昨日\" + this.allIncrease[2],\r\n              fontWeight: \"bold\",\r\n              fontSize: dataFontSize,\r\n              rich: {\r\n                a: {\r\n                  fontSize: dataFontSize * 1.2,\r\n                  fontWeight: \"bold\",\r\n                },\r\n                b: {\r\n                  fontSize: dataFontSize * 1.4,\r\n                  fontWeight: \"bold\",\r\n                },\r\n              },\r\n            },\r\n            data: [\r\n              {\r\n                value: this.allValue[2],\r\n                name: this.allName[2],\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            type: \"pie\",\r\n            radius: [\"25%\", \"35%\"],\r\n            center: [\"70%\", \"75%\"],\r\n            encode: {\r\n              itemName: \"product\",\r\n              value: \"累计死亡\",\r\n            },\r\n            color: {\r\n              type: \"linear\", // 线性渐变\r\n              x: 0,\r\n              y: 0,\r\n              x2: 0,\r\n              y2: 1,\r\n              colorStops: [\r\n                {\r\n                  offset: 0,\r\n                  color: \"rgb(201, 189, 191)\",\r\n                },\r\n                {\r\n                  offset: 1,\r\n                  color: \"rgb(110, 104, 105)\",\r\n                },\r\n              ],\r\n            },\r\n            label: {\r\n              show: true,\r\n              position: \"center\",\r\n              color: \"rgb(110, 104, 105)\",\r\n              formatter: \"{a|{c}}\\n\\n{b|{b}}\\n\\n昨日\" + this.allIncrease[3],\r\n              fontWeight: \"bold\",\r\n              fontSize: dataFontSize,\r\n              rich: {\r\n                a: {\r\n                  fontSize: dataFontSize * 1.2,\r\n                  fontWeight: \"bold\",\r\n                },\r\n                b: {\r\n                  fontSize: dataFontSize * 1.4,\r\n                  fontWeight: \"bold\",\r\n                },\r\n              },\r\n            },\r\n            data: [\r\n              {\r\n                value: this.allValue[3],\r\n                name: this.allName[3],\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      };\r\n      this.chartInstance.setOption(adapterOption);\r\n      this.chartInstance.resize();\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n</style>\r\n"],"sourceRoot":"src/components"}]}