{"remainingRequest":"D:\\shixun\\yizhi\\yizhi\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\shixun\\yizhi\\yizhi\\src\\components\\ChinaMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\shixun\\yizhi\\yizhi\\src\\components\\ChinaMap.vue","mtime":1630307085600},{"path":"D:\\shixun\\yizhi\\yizhi\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\shixun\\yizhi\\yizhi\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\shixun\\yizhi\\yizhi\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\shixun\\yizhi\\yizhi\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgQ01hcCBmcm9tICIuLi9hc3NldHMvbWFwL2pzb24vY2hpbmEuanNvbiI7DQppbXBvcnQgeyBnZXRQcm92aW5jZU1hcEluZm8gfSBmcm9tICIuLi91dGlscy9tYXBfdXRpbHMiOw0KZXhwb3J0IGRlZmF1bHQgew0KICBuYW1lOiAiY2hpbmFtYXAiLA0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICBtYXA6ICIiLA0KICAgICAgbXlDaGFydDogIiIsDQogICAgICBlY2hhcnRzOiAiIiwNCiAgICAgIG1hcERhdGE6ICIiLA0KICAgIH07DQogIH0sDQogIG1vdW50ZWQoKSB7DQogICAgdGhpcy5pbml0RWNoYXJ0TWFwKCk7DQogICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoInJlc2l6ZSIsIHRoaXMuc2NyZWVuQWRhcHRlcik7DQogIH0sDQogIGJlZm9yZVVwZGF0ZSgpIHsNCiAgICB0aGlzLnNjcmVlbkFkYXB0ZXIoKTsNCiAgfSwNCiAgZGVzdHJveWVkKCkgew0KICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCJyZXNpemUiLCB0aGlzLnNjcmVlbkFkYXB0ZXIpOw0KICB9LA0KICBtZXRob2RzOiB7DQogICAgLy/liJ3lp4vljJbkuK3lm73lnLDlm74NCiAgICBhc3luYyBpbml0RWNoYXJ0TWFwKCkgew0KICAgICAgbGV0IGFsbERhdGEgPSBhd2FpdCB0aGlzLiRheGlvcy5nZXQoIi9jaGluYW1hcCIpOw0KICAgICAgYWxsRGF0YSA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoYWxsRGF0YS5kYXRhKSk7DQogICAgICB0aGlzLmVjaGFydHMgPSByZXF1aXJlKCJlY2hhcnRzIik7DQogICAgICB0aGlzLm15Q2hhcnQgPSB0aGlzLmVjaGFydHMuaW5pdCh0aGlzLiRyZWZzLm1hcF9yZWYsICJjaGFsayIpOw0KICAgICAgdGhpcy5lY2hhcnRzLnJlZ2lzdGVyTWFwKCJjaGluYSIsIHtnZW9KU09OOkNNYXB9KTsNCiAgICAgIGFsbERhdGEubWFwKGZ1bmN0aW9uIChpKSB7DQogICAgICAgIGkubmFtZSA9IGkudXBOYW1lOw0KICAgICAgICBpLnZhbHVlID0gaS50b3RhbENvbmZpcm07DQogICAgICAgIHJldHVybiBpOw0KICAgICAgfSk7DQogICAgICBjb25zdCBvcHRpb25zID0gew0KICAgICAgICB0aXRsZTogew0KICAgICAgICAgIHRleHQ6ICLlhajlm73njrDlrZjnoa7or4rliIbluIPlm74iLA0KICAgICAgICAgIGxlZnQ6ICJjZW50ZXIiLA0KICAgICAgICAgIHRvcDogMjAsDQogICAgICAgIH0sDQogICAgICAgIHZpc3VhbE1hcDogew0KICAgICAgICAgIHNob3c6IHRydWUsDQogICAgICAgICAgbGVmdDogIjUlIiwNCiAgICAgICAgICBib3R0b206ICI1JSIsDQogICAgICAgICAgc2hvd0xhYmVsOiB0cnVlLA0KICAgICAgICAgIHBpZWNlczogWw0KICAgICAgICAgICAgew0KICAgICAgICAgICAgICBndGU6IDEwMDAsDQogICAgICAgICAgICAgIGxhYmVsOiAiPj0gMTAwMCIsDQogICAgICAgICAgICAgIGNvbG9yOiAiIzNjNTdjZSIsDQogICAgICAgICAgICB9LA0KICAgICAgICAgICAgew0KICAgICAgICAgICAgICBndGU6IDUwMCwNCiAgICAgICAgICAgICAgbHQ6IDk5OSwNCiAgICAgICAgICAgICAgbGFiZWw6ICI1MDAgLSA5OTkiLA0KICAgICAgICAgICAgICBjb2xvcjogIiM2ZjgzZGIiLA0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgZ3RlOiAxMDAsDQogICAgICAgICAgICAgIGx0OiA0OTksDQogICAgICAgICAgICAgIGxhYmVsOiAiMTAwIC0gNDk5IiwNCiAgICAgICAgICAgICAgY29sb3I6ICIjOWZhY2U3IiwNCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICB7DQogICAgICAgICAgICAgIGd0ZTogMTAsDQogICAgICAgICAgICAgIGx0OiA5OSwNCiAgICAgICAgICAgICAgbGFiZWw6ICIxMCAtIDk5IiwNCiAgICAgICAgICAgICAgY29sb3I6ICIjYjhjNGY1IiwNCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICB7DQogICAgICAgICAgICAgIGx0OiAxMCwNCiAgICAgICAgICAgICAgbGFiZWw6ICI8MTAiLA0KICAgICAgICAgICAgICBjb2xvcjogIiNkMmQ4ZjAiLA0KICAgICAgICAgICAgfSwNCiAgICAgICAgICBdLA0KICAgICAgICB9LA0KICAgICAgICB0b29sdGlwOiB7DQogICAgICAgICAgZm9ybWF0dGVyOiBmdW5jdGlvbiAocGFyYW1zKSB7DQogICAgICAgICAgICBpZiAocGFyYW1zLmRhdGEpIHsNCiAgICAgICAgICAgICAgcmV0dXJuICgNCiAgICAgICAgICAgICAgICBwYXJhbXMubmFtZSArDQogICAgICAgICAgICAgICAgIjxicj4iICsNCiAgICAgICAgICAgICAgICAi546w5a2Y56Gu6K+KOiIgKw0KICAgICAgICAgICAgICAgIHBhcmFtcy5kYXRhLnRvdGFsTm93Q29uZmlybSArDQogICAgICAgICAgICAgICAgIjxicj4iICsNCiAgICAgICAgICAgICAgICAi57Sv6K6h56Gu6K+KOiIgKw0KICAgICAgICAgICAgICAgIHBhcmFtcy5kYXRhLnRvdGFsQ29uZmlybSArDQogICAgICAgICAgICAgICAgIjxicj4iICsNCiAgICAgICAgICAgICAgICAi57Sv6K6h5rK75oSIOiIgKw0KICAgICAgICAgICAgICAgIHBhcmFtcy5kYXRhLnRvdGFsSGVhbCArDQogICAgICAgICAgICAgICAgIjxicj4iICsNCiAgICAgICAgICAgICAgICAi57Sv6K6h5q275LqhOiIgKw0KICAgICAgICAgICAgICAgIHBhcmFtcy5kYXRhLnRvdGFsRGVhZCArDQogICAgICAgICAgICAgICAgIjxicj4iICsNCiAgICAgICAgICAgICAgICAi5LuK5pel5paw5aKeOiIgKw0KICAgICAgICAgICAgICAgIHBhcmFtcy5kYXRhLnRvZGF5Q29uZmlybQ0KICAgICAgICAgICAgICApOw0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgcmV0dXJuIDxwPuaaguaXoOivpeecgeS7veaVsOaNrjwvcD47DQogICAgICAgICAgICB9DQogICAgICAgICAgfSwNCiAgICAgICAgfSwNCiAgICAgICAgdG9vbGJveDogew0KICAgICAgICAgIHNob3c6IHRydWUsDQogICAgICAgICAgZmVhdHVyZTogew0KICAgICAgICAgICAgc2F2ZUFzSW1hZ2U6IHsNCiAgICAgICAgICAgICAgcGl4ZWxSYXRpbzogNCwNCiAgICAgICAgICAgIH0sDQogICAgICAgICAgfSwNCiAgICAgICAgfSwNCiAgICAgICAgc2VyaWVzOiBbDQogICAgICAgICAgew0KICAgICAgICAgICAgdHlwZTogIm1hcCIsDQogICAgICAgICAgICBtYXA6ICJjaGluYSIsDQogICAgICAgICAgICBzZWxlY3RlZE1vZGU6ICJmYWxzZSIsIC8v5piv5ZCm5YWB6K646YCJ5Lit5aSa5Liq5Yy65Z+fDQogICAgICAgICAgICB6b29tOiAxLA0KICAgICAgICAgICAgcm9hbTogdHJ1ZSwNCiAgICAgICAgICAgIHNjYWxlTGltaXQ6IHsNCiAgICAgICAgICAgICAgbWluOiAxLA0KICAgICAgICAgICAgICBtYXg6IDMsDQogICAgICAgICAgICB9LA0KICAgICAgICAgICAgbGFiZWw6IHsNCiAgICAgICAgICAgICAgc2hvdzogdHJ1ZSwNCiAgICAgICAgICAgICAgZm9udFNpemU6ICIxNCIsDQogICAgICAgICAgICAgIGNvbG9yOiAicmdiYSgwLDAsMCwwLjcpIiwNCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICBlbXBoYXNpczogew0KICAgICAgICAgICAgICBib3JkZXJDb2xvcjogInJnYmEoMCwgMCwgMCwgMC4yKSIsDQogICAgICAgICAgICAgIGl0ZW1TdHlsZTogew0KICAgICAgICAgICAgICAgIGFyZWFDb2xvcjogIiNmMmQ1YWQiLA0KICAgICAgICAgICAgICAgIHNoYWRvd09mZnNldFg6IDAsDQogICAgICAgICAgICAgICAgc2hhZG93T2Zmc2V0WTogMCwNCiAgICAgICAgICAgICAgICBib3JkZXJXaWR0aDogMCwNCiAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICBkYXRhOiBhbGxEYXRhLA0KICAgICAgICAgIH0sDQogICAgICAgIF0sDQogICAgICB9Ow0KICAgICAgdGhpcy5teUNoYXJ0LnNldE9wdGlvbihvcHRpb25zKTsNCiAgICAgIHRoaXMubXlDaGFydC5vbigiY2xpY2siLCAoYXJnKSA9PiB7DQogICAgICAgIGNvbnN0IHByb3ZpbmNlSW5mbyA9IGdldFByb3ZpbmNlTWFwSW5mbyhhcmcubmFtZSk7DQogICAgICAgIHRoaXMuJGVtaXQoImNoYW5nZXByTmFtZSIsIHByb3ZpbmNlSW5mby5rZXkpOw0KICAgICAgICB0aGlzLiRlbWl0KCJjaGFuZ2VwclBhdGgiLCBwcm92aW5jZUluZm8ucGF0aCk7DQogICAgICAgIHRoaXMuJGVtaXQoImNoYW5nZXByVGl0bGUiLCBhcmcubmFtZSk7DQogICAgICB9KTsNCiAgICB9LA0KDQogICAgLy/pgILphY3liIbovqjnjocNCiAgICBhc3luYyBzY3JlZW5BZGFwdGVyKCkgew0KICAgICAgY29uc3QgdGl0bGVGb250U2l6ZSA9ICh0aGlzLiRyZWZzLm1hcF9yZWYub2Zmc2V0V2lkdGggLyAxMDApICogMi40Ow0KICAgICAgbGV0IGFkYXB0ZXJPcHRpb24gPSB7DQogICAgICAgIHRpdGxlOiB7DQogICAgICAgICAgdGV4dFN0eWxlOiB7DQogICAgICAgICAgICBmb250U2l6ZTogdGl0bGVGb250U2l6ZSwNCiAgICAgICAgICB9LA0KICAgICAgICB9LA0KICAgICAgfTsNCiAgICAgIHRoaXMubXlDaGFydC5zZXRPcHRpb24oYWRhcHRlck9wdGlvbik7DQogICAgICB0aGlzLm15Q2hhcnQucmVzaXplKCk7DQogICAgfSwNCiAgfSwNCn07DQo="},{"version":3,"sources":["ChinaMap.vue"],"names":[],"mappingsfile":"ChinaMap.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"com-container\">\r\n    <div class=\"com-chart\" id=\"map_ref\" ref=\"map_ref\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport CMap from \"../assets/map/json/china.json\";\r\nimport { getProvinceMapInfo } from \"../utils/map_utils\";\r\nexport default {\r\n  name: \"chinamap\",\r\n  data() {\r\n    return {\r\n      map: \"\",\r\n      myChart: \"\",\r\n      echarts: \"\",\r\n      mapData: \"\",\r\n    };\r\n  },\r\n  mounted() {\r\n    this.initEchartMap();\r\n    window.addEventListener(\"resize\", this.screenAdapter);\r\n  },\r\n  beforeUpdate() {\r\n    this.screenAdapter();\r\n  },\r\n  destroyed() {\r\n    window.removeEventListener(\"resize\", this.screenAdapter);\r\n  },\r\n  methods: {\r\n    //初始化中国地图\r\n    async initEchartMap() {\r\n      let allData = await this.$axios.get(\"/chinamap\");\r\n      allData = JSON.parse(JSON.stringify(allData.data));\r\n      this.echarts = require(\"echarts\");\r\n      this.myChart = this.echarts.init(this.$refs.map_ref, \"chalk\");\r\n      this.echarts.registerMap(\"china\", {geoJSON:CMap});\r\n      allData.map(function (i) {\r\n        i.name = i.upName;\r\n        i.value = i.totalConfirm;\r\n        return i;\r\n      });\r\n      const options = {\r\n        title: {\r\n          text: \"全国现存确诊分布图\",\r\n          left: \"center\",\r\n          top: 20,\r\n        },\r\n        visualMap: {\r\n          show: true,\r\n          left: \"5%\",\r\n          bottom: \"5%\",\r\n          showLabel: true,\r\n          pieces: [\r\n            {\r\n              gte: 1000,\r\n              label: \">= 1000\",\r\n              color: \"#3c57ce\",\r\n            },\r\n            {\r\n              gte: 500,\r\n              lt: 999,\r\n              label: \"500 - 999\",\r\n              color: \"#6f83db\",\r\n            },\r\n            {\r\n              gte: 100,\r\n              lt: 499,\r\n              label: \"100 - 499\",\r\n              color: \"#9face7\",\r\n            },\r\n            {\r\n              gte: 10,\r\n              lt: 99,\r\n              label: \"10 - 99\",\r\n              color: \"#b8c4f5\",\r\n            },\r\n            {\r\n              lt: 10,\r\n              label: \"<10\",\r\n              color: \"#d2d8f0\",\r\n            },\r\n          ],\r\n        },\r\n        tooltip: {\r\n          formatter: function (params) {\r\n            if (params.data) {\r\n              return (\r\n                params.name +\r\n                \"<br>\" +\r\n                \"现存确诊:\" +\r\n                params.data.totalNowConfirm +\r\n                \"<br>\" +\r\n                \"累计确诊:\" +\r\n                params.data.totalConfirm +\r\n                \"<br>\" +\r\n                \"累计治愈:\" +\r\n                params.data.totalHeal +\r\n                \"<br>\" +\r\n                \"累计死亡:\" +\r\n                params.data.totalDead +\r\n                \"<br>\" +\r\n                \"今日新增:\" +\r\n                params.data.todayConfirm\r\n              );\r\n            } else {\r\n              return <p>暂无该省份数据</p>;\r\n            }\r\n          },\r\n        },\r\n        toolbox: {\r\n          show: true,\r\n          feature: {\r\n            saveAsImage: {\r\n              pixelRatio: 4,\r\n            },\r\n          },\r\n        },\r\n        series: [\r\n          {\r\n            type: \"map\",\r\n            map: \"china\",\r\n            selectedMode: \"false\", //是否允许选中多个区域\r\n            zoom: 1,\r\n            roam: true,\r\n            scaleLimit: {\r\n              min: 1,\r\n              max: 3,\r\n            },\r\n            label: {\r\n              show: true,\r\n              fontSize: \"14\",\r\n              color: \"rgba(0,0,0,0.7)\",\r\n            },\r\n            emphasis: {\r\n              borderColor: \"rgba(0, 0, 0, 0.2)\",\r\n              itemStyle: {\r\n                areaColor: \"#f2d5ad\",\r\n                shadowOffsetX: 0,\r\n                shadowOffsetY: 0,\r\n                borderWidth: 0,\r\n              },\r\n            },\r\n            data: allData,\r\n          },\r\n        ],\r\n      };\r\n      this.myChart.setOption(options);\r\n      this.myChart.on(\"click\", (arg) => {\r\n        const provinceInfo = getProvinceMapInfo(arg.name);\r\n        this.$emit(\"changeprName\", provinceInfo.key);\r\n        this.$emit(\"changeprPath\", provinceInfo.path);\r\n        this.$emit(\"changeprTitle\", arg.name);\r\n      });\r\n    },\r\n\r\n    //适配分辨率\r\n    async screenAdapter() {\r\n      const titleFontSize = (this.$refs.map_ref.offsetWidth / 100) * 2.4;\r\n      let adapterOption = {\r\n        title: {\r\n          textStyle: {\r\n            fontSize: titleFontSize,\r\n          },\r\n        },\r\n      };\r\n      this.myChart.setOption(adapterOption);\r\n      this.myChart.resize();\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n</style>"]}]}