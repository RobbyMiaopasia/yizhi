{"remainingRequest":"D:\\shixun\\yizhi\\yizhi\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\shixun\\yizhi\\yizhi\\src\\components\\ProvinceMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\shixun\\yizhi\\yizhi\\src\\components\\ProvinceMap.vue","mtime":1630307013704},{"path":"D:\\shixun\\yizhi\\yizhi\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\shixun\\yizhi\\yizhi\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\shixun\\yizhi\\yizhi\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\shixun\\yizhi\\yizhi\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOw0KZXhwb3J0IGRlZmF1bHQgew0KICBuYW1lOiAicHJvdmluY2VtYXAiLA0KICBwcm9wczogWyJwcm92aW5jZU5hbWUiLCAicHJvdmluY2VQYXRoIiwgInByb3ZpbmNlVGl0bGUiXSwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgbWFwOiAiIiwNCiAgICAgIG15Q2hhcnQ6ICIiLA0KICAgICAgZWNoYXJ0czogIiIsDQogICAgICBtYXBEYXRhOiAiIiwNCiAgICB9Ow0KICB9LA0KICBtb3VudGVkKCkgew0KICAgIHRoaXMuaW5pdEVjaGFydE1hcCgpOw0KICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCJyZXNpemUiLCB0aGlzLnNjcmVlbkFkYXB0ZXIpOw0KICB9LA0KDQogIGJlZm9yZVVwZGF0ZSgpIHsNCiAgICB0aGlzLnNjcmVlbkFkYXB0ZXIoKTsNCiAgfSwNCiAgZGVzdHJveWVkKCkgew0KICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCJyZXNpemUiLCB0aGlzLnNjcmVlbkFkYXB0ZXIpOw0KICB9LA0KICBtZXRob2RzOiB7DQogICAgLy/ojrflj5blnLDlm77nn6Lph48NCiAgICBhc3luYyBnZXRNYXAoKSB7DQogICAgICB2YXIgUE1hcCA9IGF3YWl0IGF4aW9zLmdldCh0aGlzLnByb3ZpbmNlUGF0aCk7DQogICAgICB0aGlzLm1hcCA9IFBNYXAuZGF0YTsNCiAgICB9LA0KICAgIGFzeW5jIGluaXRFY2hhcnRNYXAoKSB7DQogICAgICBhd2FpdCB0aGlzLmdldE1hcCgpOw0KICAgICAgbGV0IGFsbERhdGEgPSBhd2FpdCB0aGlzLiRheGlvcy5nZXQoIi9wIik7DQogICAgICBhbGxEYXRhID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShhbGxEYXRhLmRhdGEpKTsNCiAgICAgIHRoaXMuZWNoYXJ0cyA9IHJlcXVpcmUoImVjaGFydHMiKTsNCiAgICAgIHRoaXMubXlDaGFydCA9IHRoaXMuZWNoYXJ0cy5pbml0KHRoaXMuJHJlZnMucHJvbWFwX3JlZiwgImNoYWxrIik7DQogICAgICAvL+iOt+WPluecgeS7veWcsOWbvuefoumHj+aVsOaNrg0KICAgICAgdGhpcy5lY2hhcnRzLnJlZ2lzdGVyTWFwKHRoaXMucHJvdmluY2VOYW1lLCB0aGlzLm1hcCk7DQogICAgICBhbGxEYXRhLm1hcChmdW5jdGlvbiAoaSkgew0KICAgICAgICBpLm5hbWUgPSBpLnVhTmFtZTsNCiAgICAgICAgaS52YWx1ZSA9IGkudG90YWxDb25maXJtOw0KICAgICAgICByZXR1cm4gaTsNCiAgICAgIH0pOw0KICAgICAgbGV0IG9wdGlvbnMgPSB7DQogICAgICAgIHRpdGxlOiB7DQogICAgICAgICAgdGV4dDogYCR7dGhpcy5wcm92aW5jZVRpdGxlfeeOsOWtmOehruiviuWIhuW4g+WbvmAsDQogICAgICAgICAgbGVmdDogImNlbnRlciIsDQogICAgICAgICAgdG9wOiAyMCwNCiAgICAgICAgfSwNCiAgICAgICAgdG9vbHRpcDogew0KICAgICAgICAgIGZvcm1hdHRlcjogZnVuY3Rpb24gKHBhcmFtcykgew0KICAgICAgICAgICAgaWYgKHBhcmFtcy5kYXRhKSB7DQogICAgICAgICAgICAgIHJldHVybiAoDQogICAgICAgICAgICAgICAgcGFyYW1zLm5hbWUgKw0KICAgICAgICAgICAgICAgICI8YnI+IiArDQogICAgICAgICAgICAgICAgIue0r+iuoeehruivijoiICsNCiAgICAgICAgICAgICAgICBwYXJhbXMuZGF0YS50b3RhbENvbmZpcm0gKw0KICAgICAgICAgICAgICAgICI8YnI+IiArDQogICAgICAgICAgICAgICAgIueOsOWtmOehruivijoiICsNCiAgICAgICAgICAgICAgICBwYXJhbXMuZGF0YS50b3RhbE5vd0NvbmZpcm0gKw0KICAgICAgICAgICAgICAgICI8YnI+IiArDQogICAgICAgICAgICAgICAgIue0r+iuoeayu+aEiDoiICsNCiAgICAgICAgICAgICAgICBwYXJhbXMuZGF0YS50b3RhbEhlYWwgKw0KICAgICAgICAgICAgICAgICI8YnI+IiArDQogICAgICAgICAgICAgICAgIue0r+iuoeatu+S6oToiICsNCiAgICAgICAgICAgICAgICBwYXJhbXMuZGF0YS50b3RhbERlYWQgKw0KICAgICAgICAgICAgICAgICI8YnI+IiArDQogICAgICAgICAgICAgICAgIuS7iuaXpeaWsOWinjoiICsNCiAgICAgICAgICAgICAgICBwYXJhbXMuZGF0YS50b2RheUNvbmZpcm0NCiAgICAgICAgICAgICAgKTsNCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgIHJldHVybiA8cD7mmoLml6Dor6Xln47luILmlbDmja48L3A+Ow0KICAgICAgICAgICAgfQ0KICAgICAgICAgIH0sDQogICAgICAgIH0sDQogICAgICAgIHRvb2xib3g6IHsNCiAgICAgICAgICBzaG93OiB0cnVlLA0KICAgICAgICAgIGZlYXR1cmU6IHsNCiAgICAgICAgICAgIHNhdmVBc0ltYWdlOiB7DQogICAgICAgICAgICAgIHBpeGVsUmF0aW86IDQsDQogICAgICAgICAgICB9LA0KICAgICAgICAgIH0sDQogICAgICAgIH0sDQogICAgICAgIHZpc3VhbE1hcDogew0KICAgICAgICAgIGl0ZW1IaWdodDogMTAsDQogICAgICAgICAgaXRlbVdpZHRoOiAxNSwNCiAgICAgICAgICB0ZXh0R2FwOiAxMCwNCiAgICAgICAgICBzaG93OiB0cnVlLA0KICAgICAgICAgIGxlZnQ6ICI3NSUiLA0KICAgICAgICAgIGJvdHRvbTogIjUlIiwNCiAgICAgICAgICBzaG93TGFiZWw6IHRydWUsDQogICAgICAgICAgcGllY2VzOiBbDQogICAgICAgICAgICB7DQogICAgICAgICAgICAgIGd0ZTogMTAwMCwNCiAgICAgICAgICAgICAgbGFiZWw6ICI+PSAxMDAwIiwNCiAgICAgICAgICAgICAgY29sb3I6ICIjM2M1N2NlIiwNCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICB7DQogICAgICAgICAgICAgIGd0ZTogNTAwLA0KICAgICAgICAgICAgICBsdDogOTk5LA0KICAgICAgICAgICAgICBsYWJlbDogIjUwMCAtIDk5OSIsDQogICAgICAgICAgICAgIGNvbG9yOiAiIzZmODNkYiIsDQogICAgICAgICAgICB9LA0KICAgICAgICAgICAgew0KICAgICAgICAgICAgICBndGU6IDEwMCwNCiAgICAgICAgICAgICAgbHQ6IDQ5OSwNCiAgICAgICAgICAgICAgbGFiZWw6ICIxMDAgLSA0OTkiLA0KICAgICAgICAgICAgICBjb2xvcjogIiM5ZmFjZTciLA0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgZ3RlOiAxMCwNCiAgICAgICAgICAgICAgbHQ6IDk5LA0KICAgICAgICAgICAgICBsYWJlbDogIjEwIC0gOTkiLA0KICAgICAgICAgICAgICBjb2xvcjogIiNiOGM0ZjUiLA0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgbHQ6IDEwLA0KICAgICAgICAgICAgICBsYWJlbDogIjwxMCIsDQogICAgICAgICAgICAgIGNvbG9yOiAiI2QyZDhmMCIsDQogICAgICAgICAgICB9LA0KICAgICAgICAgIF0sDQogICAgICAgIH0sDQogICAgICAgIHNlcmllczogWw0KICAgICAgICAgIHsNCiAgICAgICAgICAgIHR5cGU6ICJtYXAiLA0KICAgICAgICAgICAgbWFwOiB0aGlzLnByb3ZpbmNlTmFtZSwNCiAgICAgICAgICAgIGxhYmVsOiB7DQogICAgICAgICAgICAgIHNob3c6IHRydWUsDQogICAgICAgICAgICAgIGZvbnRTaXplOiAiMTQiLA0KICAgICAgICAgICAgICBjb2xvcjogInJnYmEoMCwwLDAsMC43KSIsDQogICAgICAgICAgICB9LA0KICAgICAgICAgICAgZW1waGFzaXM6IHsNCiAgICAgICAgICAgICAgYm9yZGVyQ29sb3I6ICJyZ2JhKDAsIDAsIDAsIDAuMikiLA0KICAgICAgICAgICAgICBpdGVtU3R5bGU6IHsNCiAgICAgICAgICAgICAgICBhcmVhQ29sb3I6ICIjZjJkNWFkIiwNCiAgICAgICAgICAgICAgICBzaGFkb3dPZmZzZXRYOiAwLA0KICAgICAgICAgICAgICAgIHNoYWRvd09mZnNldFk6IDAsDQogICAgICAgICAgICAgICAgYm9yZGVyV2lkdGg6IDAsDQogICAgICAgICAgICAgIH0sDQogICAgICAgICAgICB9LA0KICAgICAgICAgICAgZGF0YTogYWxsRGF0YSwNCiAgICAgICAgICB9LA0KICAgICAgICBdLA0KICAgICAgfTsNCg0KICAgICAgdGhpcy5teUNoYXJ0LnNldE9wdGlvbihvcHRpb25zKTsNCiAgICB9LA0KICAgIC8v6YCC6YWN5YiG6L6o546HDQogICAgYXN5bmMgc2NyZWVuQWRhcHRlcigpIHsNCiAgICAgIGNvbnN0IHRpdGxlRm9udFNpemUgPSAodGhpcy4kcmVmcy5wcm9tYXBfcmVmLm9mZnNldFdpZHRoIC8gMTAwKSAqIDMuNDsNCiAgICAgIGxldCBhZGFwdGVyT3B0aW9uID0gew0KICAgICAgICB0aXRsZTogew0KICAgICAgICAgIHRleHRTdHlsZTogew0KICAgICAgICAgICAgZm9udFNpemU6IHRpdGxlRm9udFNpemUsDQogICAgICAgICAgfSwNCiAgICAgICAgfSwNCiAgICAgIH07DQogICAgICB0aGlzLm15Q2hhcnQuc2V0T3B0aW9uKGFkYXB0ZXJPcHRpb24pOw0KICAgICAgdGhpcy5teUNoYXJ0LnJlc2l6ZSgpOw0KICAgIH0sDQogIH0sDQogIHdhdGNoOiB7DQogICAgcHJvdmluY2VOYW1lKCkgew0KICAgICAgdGhpcy5pbml0RWNoYXJ0TWFwKCk7DQogICAgfSwNCiAgfSwNCn07DQo="},{"version":3,"sources":["ProvinceMap.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ProvinceMap.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"com-container\">\r\n    <div class=\"com-chart\" id=\"map_ref\" ref=\"promap_ref\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nexport default {\r\n  name: \"provincemap\",\r\n  props: [\"provinceName\", \"provincePath\", \"provinceTitle\"],\r\n  data() {\r\n    return {\r\n      map: \"\",\r\n      myChart: \"\",\r\n      echarts: \"\",\r\n      mapData: \"\",\r\n    };\r\n  },\r\n  mounted() {\r\n    this.initEchartMap();\r\n    window.addEventListener(\"resize\", this.screenAdapter);\r\n  },\r\n\r\n  beforeUpdate() {\r\n    this.screenAdapter();\r\n  },\r\n  destroyed() {\r\n    window.removeEventListener(\"resize\", this.screenAdapter);\r\n  },\r\n  methods: {\r\n    //获取地图矢量\r\n    async getMap() {\r\n      var PMap = await axios.get(this.provincePath);\r\n      this.map = PMap.data;\r\n    },\r\n    async initEchartMap() {\r\n      await this.getMap();\r\n      let allData = await this.$axios.get(\"/p\");\r\n      allData = JSON.parse(JSON.stringify(allData.data));\r\n      this.echarts = require(\"echarts\");\r\n      this.myChart = this.echarts.init(this.$refs.promap_ref, \"chalk\");\r\n      //获取省份地图矢量数据\r\n      this.echarts.registerMap(this.provinceName, this.map);\r\n      allData.map(function (i) {\r\n        i.name = i.uaName;\r\n        i.value = i.totalConfirm;\r\n        return i;\r\n      });\r\n      let options = {\r\n        title: {\r\n          text: `${this.provinceTitle}现存确诊分布图`,\r\n          left: \"center\",\r\n          top: 20,\r\n        },\r\n        tooltip: {\r\n          formatter: function (params) {\r\n            if (params.data) {\r\n              return (\r\n                params.name +\r\n                \"<br>\" +\r\n                \"累计确诊:\" +\r\n                params.data.totalConfirm +\r\n                \"<br>\" +\r\n                \"现存确诊:\" +\r\n                params.data.totalNowConfirm +\r\n                \"<br>\" +\r\n                \"累计治愈:\" +\r\n                params.data.totalHeal +\r\n                \"<br>\" +\r\n                \"累计死亡:\" +\r\n                params.data.totalDead +\r\n                \"<br>\" +\r\n                \"今日新增:\" +\r\n                params.data.todayConfirm\r\n              );\r\n            } else {\r\n              return <p>暂无该城市数据</p>;\r\n            }\r\n          },\r\n        },\r\n        toolbox: {\r\n          show: true,\r\n          feature: {\r\n            saveAsImage: {\r\n              pixelRatio: 4,\r\n            },\r\n          },\r\n        },\r\n        visualMap: {\r\n          itemHight: 10,\r\n          itemWidth: 15,\r\n          textGap: 10,\r\n          show: true,\r\n          left: \"75%\",\r\n          bottom: \"5%\",\r\n          showLabel: true,\r\n          pieces: [\r\n            {\r\n              gte: 1000,\r\n              label: \">= 1000\",\r\n              color: \"#3c57ce\",\r\n            },\r\n            {\r\n              gte: 500,\r\n              lt: 999,\r\n              label: \"500 - 999\",\r\n              color: \"#6f83db\",\r\n            },\r\n            {\r\n              gte: 100,\r\n              lt: 499,\r\n              label: \"100 - 499\",\r\n              color: \"#9face7\",\r\n            },\r\n            {\r\n              gte: 10,\r\n              lt: 99,\r\n              label: \"10 - 99\",\r\n              color: \"#b8c4f5\",\r\n            },\r\n            {\r\n              lt: 10,\r\n              label: \"<10\",\r\n              color: \"#d2d8f0\",\r\n            },\r\n          ],\r\n        },\r\n        series: [\r\n          {\r\n            type: \"map\",\r\n            map: this.provinceName,\r\n            label: {\r\n              show: true,\r\n              fontSize: \"14\",\r\n              color: \"rgba(0,0,0,0.7)\",\r\n            },\r\n            emphasis: {\r\n              borderColor: \"rgba(0, 0, 0, 0.2)\",\r\n              itemStyle: {\r\n                areaColor: \"#f2d5ad\",\r\n                shadowOffsetX: 0,\r\n                shadowOffsetY: 0,\r\n                borderWidth: 0,\r\n              },\r\n            },\r\n            data: allData,\r\n          },\r\n        ],\r\n      };\r\n\r\n      this.myChart.setOption(options);\r\n    },\r\n    //适配分辨率\r\n    async screenAdapter() {\r\n      const titleFontSize = (this.$refs.promap_ref.offsetWidth / 100) * 3.4;\r\n      let adapterOption = {\r\n        title: {\r\n          textStyle: {\r\n            fontSize: titleFontSize,\r\n          },\r\n        },\r\n      };\r\n      this.myChart.setOption(adapterOption);\r\n      this.myChart.resize();\r\n    },\r\n  },\r\n  watch: {\r\n    provinceName() {\r\n      this.initEchartMap();\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n</style>"]}]}